# -*- coding: utf-8 -*-
"""GMM Apr.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QVKwBZPUcZQv7AryTq20rAtixj2V0xlm
"""

import pandas as pd
import numpy as np
from numpy import random
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt
import seaborn as sns
import itertools
from collections import Counter
from scipy.spatial import ConvexHull

AprFF = pd.read_csv("/content/drive/MyDrive/NSSTC/Fires/Fires Dataset/2021_04_forestfires.csv")
AprFF.head(5)

scaler = MinMaxScaler()
scaler.fit(AprFF)
ScaleAprFF = scaler.transform(AprFF)
ScaleAprFF = pd.DataFrame(ScaleAprFF)

n_comp=[2,3,4,5,6,8,10,12,14,16,18,20]


sil_score1=[]  # empty array for storage
num_clus1 = []


for n in n_comp:
  print(n)
  gmm = GaussianMixture(n_components = n,
                            random_state = 1).fit(ScaleAprFF)

  labels = gmm.predict(ScaleAprFF)

  sil_score1.append(silhouette_score(ScaleAprFF,labels))

  num_clus1.append(len(np.unique(labels)))

res1 = pd.DataFrame(list(n_comp))
res1 ['silhouette_score'] = sil_score1
res1 ['num_cluster'] = num_clus1
res1.sort_values (by = 'silhouette_score' , ascending = False)

gmm = GaussianMixture(n_components=4,
                            random_state = 1)
gmm.fit(ScaleAprFF)
labels4 = gmm.predict(ScaleAprFF)
AprFFscore = silhouette_score(ScaleAprFF,labels4)
print('AprFF:' ,AprFFscore)

AprFF['ClusterLabel'] = labels4
AprFF.head()

AprFF.to_csv(r'/content/drive/MyDrive/NSSTC/Fires/Clusters\GMMAprFF.csv', index=False)

"""### **Apr AG**"""

AprAg = pd.read_csv("/content/drive/MyDrive/NSSTC/Fires/Fires Dataset/2021_04_agfires.csv")
AprAg.head(5)

scaler = MinMaxScaler()
scaler.fit(AprAg)
ScaleAprAg = scaler.transform(AprAg)
ScaleAprAg = pd.DataFrame(ScaleAprAg)

n_comp=[2,3,4,5,6,8,10,12,14,16,18,20]


sil_score1=[]  # empty array for storage
num_clus1 = []


for n in n_comp:
  print(n)
  gmmAprag = GaussianMixture(n_components = n,
                            random_state = 1).fit(ScaleAprAg)

  labelsAprAg = gmmAprag.predict(ScaleAprAg)

  sil_score1.append(silhouette_score(ScaleAprAg,labelsAprAg))

  num_clus1.append(len(np.unique(labelsAprAg)))

res1 = pd.DataFrame(list(n_comp))
res1 ['silhouette_score'] = sil_score1
res1 ['num_cluster'] = num_clus1
res1.sort_values (by = 'silhouette_score' , ascending = False)

gmm = GaussianMixture(n_components=2,
                            random_state = 1)
gmm.fit(ScaleAprAg)
labels2 = gmm.predict(ScaleAprAg)
AprAgscore = silhouette_score(ScaleAprAg,labels2)
print('AprAg:' ,AprAgscore)

AprAg['ClusterLabel'] = labels2
AprAg.head()

AprAg.to_csv(r'/content/drive/MyDrive/NSSTC/Fires/Clusters\GMMAprAg2.csv', index=False)

gmm3 = GaussianMixture(n_components=3,
                            random_state = 1)
gmm3.fit(ScaleAprAg)
labels3 = gmm3.predict(ScaleAprAg)
AprAgscore = silhouette_score(ScaleAprAg,labels3)
print('AprAg:' ,AprAgscore)

AprAg['ClusterLabel3'] = labels3
AprAg.head()

AprAg.to_csv(r'/content/drive/MyDrive/NSSTC/Fires/Clusters\GMMAprAg2&3.csv', index=False)