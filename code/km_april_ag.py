# -*- coding: utf-8 -*-
"""KM April Ag.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fdgCKt_Wn7WQGjKtkCNXyrgKJMUrdcm6
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns
import itertools
from scipy.spatial import ConvexHull

path = "/content/drive/MyDrive/NSSTC/Fires/Fires Dataset/2021_04_agfires.csv"

data = pd.read_csv(path)
data.head(5)

scaler = MinMaxScaler()
scaler.fit(data)
dfs1 = scaler.transform(data)
dfs1 = pd.DataFrame(dfs1)

print(dfs1.shape)
print('------------------------------------------------')
print(dfs1.isnull().sum())
print('------------------------------------------------')
print(dfs1.describe())

SSE = []

for k in range(3,16):

    kmeans = KMeans(n_clusters = k) # k-means clustering algorithm where we are iterating through k
    kmeans.fit(dfs1) # Fitting k-means clustering algorithm
    SSE.append(kmeans.inertia_) # Appending the SSE to the empty list.

results = pd.DataFrame({"k": range(3,16),
                       "SSE/Inertia": SSE})
results

plt.plot(results["k"], results["SSE/Inertia"], linewidth = 10, color = "black")
plt.xlabel("k value")
plt.ylabel("SSE/Inertia")
plt.title("SSE/Inertia vs. k value");

kmeans = KMeans(n_clusters = 8)
kmeans.fit(dfs1)

data['kmeans_clusters'] = kmeans.labels_
data

from sklearn.metrics import silhouette_score

score=silhouette_score(dfs1,kmeans.labels_)
score

data.groupby("kmeans_clusters").describe()

colors = kmeans.labels_
col_clus = colors

fig = plt.figure()

ax = fig.add_axes([0.1, 0.1, 1,1])

ax.scatter(data['LONGITUDE'], data['LATITUDE'], c=col_clus, edgecolors = 'black', s=50)


ax.set_xlabel('LONGITUDE')
ax.set_ylabel('LATITUDE')

#plt.grid(which='major')

plt.show()

colors = kmeans.labels_
col_clus = colors

fig = plt.figure()

ax = fig.add_axes([0.1, 0.1, 1,1])

ax.scatter(data['LONGITUDE'], data['LATITUDE'], c=col_clus, edgecolors = 'black', s=50)

a =data.kmeans_clusters	.unique()
#s=np.delete(data.kmeans_clusters	.unique(), np.where(a == -1))

for i in a:
    points = data[data.kmeans_clusters == i][['LATITUDE', 'LONGITUDE']].values

    hull = ConvexHull(points)

    vert = np.append(hull.vertices,hull.vertices[0])

    ax.plot(points[vert, 1], points[vert,0 ], '--')
    ax.fill(points[vert, 1], points[vert, 0], alpha=0.2)

ax.set_xlabel('LONGITUDE')
ax.set_ylabel('LATITUDE')

#plt.grid(which='major')

plt.show()

data.head()

data.to_csv(r'/content/drive/MyDrive/NSSTC/Fires/KMeans Final/KM May FF.ipynb\KM AprilAg.csv', index=False)